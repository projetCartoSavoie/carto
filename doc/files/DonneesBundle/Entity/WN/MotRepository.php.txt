<?php

namespace Carto\DonneesBundle\Entity\WN;

use Doctrine\ORM\EntityRepository;

/**
 * MotRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MotRepository extends EntityRepository
{
	//A enlever, présente juste pour l'apprentissage des tests
	/**
	 * fonction trouve
	 *
	 * @param string $recherche
	 * @return string
	 * @todo : enlever cette fonction et son test à la fin du projet
	*/
	public function trouve($recherche)
	{
		$mot = $this -> findOneByMot($recherche);
		if ($mot != NULL)
		{
			return $mot;
		}
		else
		{
			return 'entity';
			//On cherche tous les mots
			$mots = $this -> findAll();

			//On remplace le tableau d'objets par un tableau de chaines de caractères
			$strmots = array();
			foreach ($mots as $cle => $m)
			{
				$strmots[$cle] = $m -> getMot();
			}

			//Pour chaque mot on calcule son taux de correspondance
			$correspondances = array();
			foreach ($strmots as $m)
			{
				$correspondance[$m] = $this -> calculCorrespondance($m,$recherche);
			}
			$minindex = min($correspondances);
			$correspondances = array_flip($correspondances);
			$mot = $this -> findOneByMot($correspondances[$minindex]);
			return $mot;
		}
	}

	public function calculCorrespondance($m,$recherche)
	{
		$c = levenshtein($m,$recherche);
		if (soundex($m) == soundex($recherche)) { $c -= 10; }
		return $c;
	}
}

